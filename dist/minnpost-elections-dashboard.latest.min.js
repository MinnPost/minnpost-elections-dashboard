/*! MinnPost Elections Dashboard - v0.0.1 - 2013-10-18
* https://github.com/zzolo/minnpost-elections-dashboard
* Copyright (c) 2013 MinnPost; Licensed MIT */

var mpApps=mpApps||{},mpTemplates=mpTemplates||{};mpTemplates["minnpost-elections-dashboard"]=mpTemplates["minnpost-elections-dashboard"]||{},_.mixin({formatNumber:function(a,b){b=_.isUndefined(b)?2:b;var c=/(\d+)(\d{3})/;for(split=a.toFixed(b).toString().split(".");c.test(split[0]);)split[0]=split[0].replace(c,"$1,$2");return b?split[0]+"."+split[1]:split[0]},formatCurrency:function(a){return"$"+_.formatNumber(a,2)},formatPercent:function(a){return _.formatNumber(100*a,1)+"%"},formatPercentChange:function(a){return(a>0?"+":"")+_.formatPercent(a)}}),function(a){App=mpApps["minnpost-elections-dashboard"]=function(b){this.options=_.extend(this.defaultOptions,b),this.$el=a(this.options.el),this.templates=mpTemplates["minnpost-elections-dashboard"]||{},this.data=this.data||{}},_.extend(App.prototype,{extend:Backbone.Model.extend,defaultOptions:{dataPath:"./data/",jsonpProxy:"http://mp-jsonproxy.herokuapp.com/proxy?callback=?&url=",electionsAPI:"http://ec2-54-221-171-99.compute-1.amazonaws.com/?box=ubuntu&q=",boundaryAPI:"http://boundaries.minnpost.com/1.0/"},getTemplates:function(b){var c=this,d=[];return b=_.isArray(b)?b:[b],_.each(b,function(b){var e,f="js/templates/"+b+".mustache";_.isUndefined(c.templates[b])&&(e=a.ajax({url:f,method:"GET",async:!1,contentType:"text"}),a.when(e).done(function(a){c.templates[b]=a}),d.push(e))}),a.when.apply(a,d)},template:function(a){return this.templates[a]},getLocalData:function(b){var c=this,d=this.options.jsonpProxy,e=!1,f=[];return b=_.isArray(b)?b:[b],this.options&&0===this.options.dataPath.indexOf("http")&&(e=!0),_.each(b,function(b){var g;_.isUndefined(c.data[b])&&(g=e?a.jsonp({url:d+encodeURI(c.options.dataPath+b+".json")}):a.getJSON(c.options.dataPath+b+".json"),a.when(g).done(function(a){c.data[b]=a}),f.push(g))}),a.when.apply(a,f)},getRemoteData:function(b){return this.options.remoteProxy?(b.url=b.url+"&callback=proxied_jqjsp",b.url=app.options.remoteProxy+encodeURIComponent(b.url),b.callback="proxied_jqjsp",b.cache=!0):b.url=b.url+"&callback=?",a.jsonp(b)},start:function(){}})}(jQuery),mpTemplates=mpTemplates||{},mpTemplates["minnpost-elections-dashboard"]={"template-application":'<div class="message-container"></div>\n\n<div class="content-container"></div>\n\n<div class="footnote-container"></div>',"template-contest":'<div class="contest {{ classes }}">\n  <div>\n    {{#(title == undefined)}}\n      {{>loading}}\n    {{/())}}\n  </div>\n\n  <h3>{{ title }}</h3>\n  <a href="#contest/{{ contest_id }}">link</a>\n\n  <p>\n    Last updated at {{ updated.format(\'MMMM Do YYYY, h:mm:ss a\') }} <br />\n    Number of seats: {{ seats }} <br />\n    Ranked-choiced race: {{ (ranked_choice == 1) ? \'Yes\' : \'No\' }} <br />\n    {{ precincts_reporting }} of {{ total_effected_precincts }} precincts reporting.\n  </p>\n\n  <table>\n    <thead>\n      <tr>\n        <th>Winner</th>\n        <th>Candidate</th>\n        <th>Incumbent</th>\n        <th>Party</th>\n        {{#(ranked_choice == 1)}}\n          <th>1st Choice Percentage</th>\n          <th>2nd Choice Percentage</th>\n          <th>3rd Choice Percentage</th>\n          <th>Final</th>\n        {{/()}}\n        {{#(ranked_choice != 1)}}\n          <th>Votes</th>\n          <th>Percentage</th>\n        {{/()}}\n      </tr>\n    </thead>\n\n    <tbody>\n      {{#results:r}}\n        <tr>\n          <td>{{#winner}}Y{{/winner}}{{#(winner === false)}}N{{/()}}</td>\n          <td>{{ candidate }}</td>\n          <td>{{ incumbent_code }}</td>\n          <td>{{ party_id }}</td>\n\n          {{#(ranked_choice == 1)}}\n            <td>{{ ranked_choices.1.percentage }}</td>\n            <td>{{ ranked_choices.2.percentage }}</td>\n            <td>{{ ranked_choices.3.percentage }}</td>\n            <td>{{ ranked_choices.100.percentage }}</td>\n          {{/()}}\n\n          {{#(ranked_choice != 1)}}\n            <td>{{ votes_candidate }}</td>\n            <td>{{ percentage }}</td>\n          {{/()}}\n        </tr>\n      {{/results}}\n    </tbody>\n  </table>\n\n  <div class="contest-map" id="contest-map-{{ id }}">\n  </div>\n\n</div>',"template-contests":'<div class="contests">\n  <div>\n    {{#(models.length == 0)}}\n      {{>loading}}\n    {{/())}}\n  </div>\n\n  <h3>Contests</h3>\n\n  {{#models:i}}\n    {{>contest}}\n  {{/models}}\n\n  <div class="contest-map" id="contests-map">\n\n  </div>\n</div>',"template-dashboard":'<div class="dashboard {{ classes }}">\n\n  <h3>Dashboard</h3>\n\n  <ul>\n    <li><a href="#search/minneapolis+mayor">Minneapolis mayor</a></li>\n    <li><a href="#search/minneapolis+ward">Minneapolis council races</a></li>\n    <li><a href="#search/duluth">Duluth races</a></li>\n  </ul>\n\n</div>',"template-footnote":'<div class="footnote">\n  <p>Unofficial election data provided by the <a href="http://www.sos.state.mn.us/" target="_blank">MN Secretary of State</a>.  Test data will be provided until 8PM on Election Night.  Some code, techniques, and data on <a href="https://github.com/zzolo/minnpost-elections-dashboard" target="_blank">Github</a>.</p>\n</div>',"template-loading":'<div class="loading-container">\n  <div class="loading"><span>Loading...</span></div>\n</div>'},function(a){_.extend(a.prototype,{start:function(){var a=this,b=["template-application","template-footnote","template-dashboard","template-loading","template-contest","template-contests"];this.getTemplates(b).done(function(){a.applicationView=new a.ApplicationView({el:a.$el,template:a.template("template-application")}),a.footnoteView=new a.FootnoteView({el:a.$el.find(".footnote-container"),template:a.template("template-footnote")}),a.router=new a.DashboardRouter(_.extend(a.options,{app:a})),a.router.start()})}})}(mpApps["minnpost-elections-dashboard"],jQuery),function(a,b){a.prototype.ContestModel=Backbone.Model.extend({query:"SELECT * FROM contests AS c LEFT JOIN results AS r ON c.contest_id = r.contest_id WHERE c.contest_id = '%CONTEST_ID%'",contestFields:["boundary","contest_id","contest_id_name","county_id","district_code","office_id","office_name_id","precinct_id","precincts_reporting","question_body","ranked_choice","results_group","seats","state","title","total_effected_precincts","total_votes_for_office","updated"],rankedChoiceTranslations:{first:1,second:2,third:3,fourth:4,fifth:5,sixth:6,seventh:7,eighth:8,nineth:9,tenth:10,"final":100},initialize:function(a,b){this.options=b||{},this.app=b.app,this.on("sync",this.contestUpdate)},url:function(){return this.app.options.electionsAPI+encodeURIComponent(this.query.replace("%CONTEST_ID%",this.id))},parse:function(a){var b=this,c={};if(c.results=[],_.each(a,function(a){var d={};_.each(a,function(a,e){_.indexOf(b.contestFields,e)>=0?c[e]=a:d[e]=a}),c.results.push(d)}),c.ranked_choice){var d={};_.each(c.results,function(a){_.each(b.rankedChoiceTranslations,function(b,c){a.office_name.toLowerCase().indexOf(c)>0&&(d[a.candidate_id]=d[a.candidate_id]||{},d[a.candidate_id].ranked_choices=d[a.candidate_id].ranked_choices||{},d[a.candidate_id].ranked_choices[b]={ranked_choice:b,percentage:a.percentage,votes_candidate:a.votes_candidate,office_name:a.office_name},1===b&&(d[a.candidate_id]=_.extend(d[a.candidate_id],a)))})}),c.results=_.values(d)}return c.results=_.sortBy(c.results,"candidate"),c.results=_.sortBy(c.results,function(a){return-1*a.percentage}),c.precincts_reporting===c.total_effected_precincts&&(c.ranked_choice||(c.results=_.map(c.results,function(a,b){return a.winner=!1,b<c.seats&&(a.winner=!0),a}))),c.updated=moment.unix(c.updated),c},contestUpdate:function(){!this.get("fetchedBoundary")&&_.isString(this.get("boundary"))&&this.fetchBoundary()},fetchBoundary:function(){var a=this;b.jsonp({url:this.app.options.boundaryAPI+"boundary/?slug__in="+encodeURIComponent(this.get("boundary"))+"&callback=?"}).done(function(b){_.isArray(b.objects)&&(a.set("boundarySets",b.objects),a.set("fetchedBoundary",!0))})},connect:function(){var a=this;this.fetch(),this.pollID=window.setInterval(function(){a.fetch()},3e4)},disconnect:function(){window.clearInterval(this.pollID)}})}(mpApps["minnpost-elections-dashboard"],jQuery),function(a,b){a.prototype.ContestsCollection=Backbone.Collection.extend({model:a.prototype.ContestModel,query:"SELECT * FROM contests AS c LEFT JOIN results AS r ON c.contest_id = r.contest_id WHERE (%CONTEST_SEARCH%) ORDER BY c.contest_id, r.percentage ASC LIMIT 400",url:function(){var a=this.options.search.split("|");return a=_.map(a,function(a){return a=a.split(" ").join("%"),a=a.split("+").join("%"),"title LIKE '%"+a+"%'"}),this.app.options.electionsAPI+encodeURIComponent(this.query.replace("%CONTEST_SEARCH%",a.join(" OR ")))},parse:function(a){return _.values(_.groupBy(a,"contest_id"))},initialize:function(a,b){this.options=b||{},this.app=b.app,this.on("add",function(a){a.options=b,a.app=b.app}),this.on("sync",function(){this.contestUpdate()})},contestUpdate:function(){this.fetchedBoundary||this.fetchBoundary()},fetchBoundary:function(){var a=this;b.jsonp({url:this.app.options.boundaryAPI+"boundary/?slug__in="+encodeURIComponent(this.pluck("boundary").join(","))+"&callback=?"}).done(function(b){_.isArray(b.objects)&&(_.each(b.objects,function(b){a.filter(function(a){return a.get("boundary").indexOf(b.slug)>=0})[0].set("boundarySets",[b])}),a.fetchedBoundary=!0,a.each(function(a){a.set("fetchedBoundary",!0)}))})},connect:function(){var a=this;this.fetch(),this.pollID=window.setInterval(function(){a.fetch()},3e4)},disconnect:function(){window.clearInterval(this.pollID)}})}(mpApps["minnpost-elections-dashboard"],jQuery),function(a){a.prototype.ApplicationView=Ractive.extend({init:function(){}}),a.prototype.FootnoteView=Ractive.extend({init:function(){}}),a.prototype.ContestBaseView=Ractive.extend({makeMap:function(a,b){var c,d,e=this;b=_.isArray(b)?b:[b],d=_.map(b,function(a){return a.simple_shape}),this.map=new L.Map(a,{zoom:10,center:[44.98,-93.2636],scrollWheelZoom:!1}),this.map.attributionControl.setPrefix(!1),this.map.addLayer(new L.tileLayer("//{s}.tiles.mapbox.com/v3/minnpost.map-wi88b700/{z}/{x}/{y}.png")),c=new L.featureGroup,_.each(d,function(a){var b=new L.geoJson(a);c.addLayer(b)}),this.map.addLayer(c),window.setTimeout(function(){e.map.fitBounds(c.getBounds())},500)}}),a.prototype.DashboardView=a.prototype.ContestBaseView.extend({init:function(){}}),a.prototype.ContestView=a.prototype.ContestBaseView.extend({init:function(){this.set("classes","contest-view"),this.observe("boundarySets",function(a){_.isArray(a)&&_.isObject(a[0])&&this.makeMap("contest-map-"+this.get("id"),a)})}}),a.prototype.ContestsView=a.prototype.ContestBaseView.extend({init:function(){var a=[];this.observe("models.0.fetchedBoundary",function(){var b=this.get("models.0.boundarySets");_.isArray(b)&&_.isObject(b[0])&&(_.each(this.get("models"),function(b){_.each(b.get("boundarySets"),function(b){a.push(b)})}),this.makeMap("contests-map",a))})}})}(mpApps["minnpost-elections-dashboard"],jQuery),function(a){a.prototype.DashboardRouter=Backbone.Router.extend({initialize:function(a){this.options=a,this.app=a.app},routes:{dashboard:"routeDashboard","search/:term":"routeSearch","contest/:contest":"routeContest","*default":"routeDefault"},start:function(){Backbone.history.start()},routeDefault:function(){this.navigate("/dashboard",{trigger:!0,replace:!0})},routeDashboard:function(){this.teardownObjects(),this.app.dashboardView=new this.app.DashboardView({el:this.app.$el.find(".content-container"),template:this.app.template("template-dashboard"),data:{},partials:{loading:this.app.template("template-loading")},adaptors:["Backbone"]})},routeSearch:function(a){this.teardownObjects(),this.app.contestsSearch=new this.app.ContestsCollection([],{app:this.app,search:a}),this.app.contestsSearch.connect(),this.app.contestsSearchView=new this.app.ContestsView({el:this.app.$el.find(".content-container"),template:this.app.template("template-contests"),data:{models:this.app.contestsSearch},partials:{contest:this.app.template("template-contest"),loading:this.app.template("template-loading")},adaptors:["Backbone"]})},routeContest:function(a){this.teardownObjects(),this.app.contest=new this.app.ContestModel({id:a},{app:this.app}),this.app.contest.connect(),this.app.contestView=new this.app.ContestView({el:this.app.$el.find(".content-container"),template:this.app.template("template-contest"),data:this.app.contest,partials:{loading:this.app.template("template-loading")},adaptors:["Backbone"]})},teardownObjects:function(){var a=this,b=["contestView","contestsSearchView"],c=["contest","contestsSearch"];_.each(c,function(b){_.isObject(a.app[b])&&(a.app[b].stopListening(),a.app[b].disconnect())}),_.each(b,function(b){_.isObject(a.app[b])&&(_.isObject(a.app[b].map),a.app[b].teardown())})}})}(mpApps["minnpost-elections-dashboard"],jQuery);